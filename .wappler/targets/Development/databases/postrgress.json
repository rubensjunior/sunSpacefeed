{
  "type": "postgres",
  "connection": {
    "host": "aws-0-sa-east-1.pooler.supabase.com",
    "port": 6543,
    "user": "postgres.qwxqwcyrgwogyyjengbo",
    "password": "@Bakihamma025@",
    "database": "postgres"
  },
  "direct": true,
  "schema": {
    "schemas": [
      "storage",
      "pgbouncer",
      "auth",
      "pgsodium",
      "realtime",
      "pgsodium_masks",
      "vault",
      "graphql_public",
      "graphql",
      "public",
      "extensions"
    ],
    "tables": {
      "storage.buckets": {
        "db": {
          "schema": "storage"
        },
        "refs": {
          "storage.objects": "bucket_id",
          "storage.s3_multipart_uploads": "bucket_id",
          "storage.s3_multipart_uploads_parts": "bucket_id"
        }
      },
      "storage.migrations": {
        "db": {
          "schema": "storage"
        }
      },
      "storage.objects": {
        "db": {
          "schema": "storage"
        }
      },
      "storage.s3_multipart_uploads": {
        "db": {
          "schema": "storage"
        },
        "sub": {
          "storage.s3_multipart_uploads_parts": "upload_id"
        }
      },
      "storage.s3_multipart_uploads_parts": {
        "db": {
          "schema": "storage"
        },
        "parent": "s3_multipart_uploads"
      },
      "auth.saml_providers": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SAML Identity Provider connections."
        }
      },
      "auth.saml_relay_states": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Contains SAML Relay State information for each Service Provider initiated login."
        }
      },
      "auth.audit_log_entries": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Audit trail for user actions."
        }
      },
      "auth.flow_state": {
        "db": {
          "schema": "auth",
          "comment": "stores metadata for pkce logins"
        },
        "refs": {
          "auth.saml_relay_states": "flow_state_id"
        }
      },
      "auth.identities": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores identities associated to a user."
        }
      },
      "auth.instances": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages users across multiple sites."
        }
      },
      "auth.mfa_challenges": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores metadata about challenge requests made"
        }
      },
      "auth.schema_migrations": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages updates to the auth system."
        }
      },
      "auth.sessions": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores session data associated to a user."
        },
        "refs": {
          "auth.refresh_tokens": "session_id",
          "auth.mfa_amr_claims": "session_id"
        }
      },
      "auth.refresh_tokens": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Store of tokens used to refresh JWT tokens once they expire."
        }
      },
      "auth.mfa_factors": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores metadata about factors"
        },
        "refs": {
          "auth.mfa_challenges": "factor_id"
        }
      },
      "auth.one_time_tokens": {
        "db": {
          "schema": "auth"
        }
      },
      "auth.mfa_amr_claims": {
        "db": {
          "schema": "auth",
          "comment": "auth: stores authenticator method reference claims for multi factor authentication"
        }
      },
      "auth.sso_domains": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SSO email address domain mapping to an SSO Identity Provider."
        }
      },
      "auth.sso_providers": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Manages SSO identity provider information; see saml_providers for SAML."
        },
        "refs": {
          "auth.saml_providers": "sso_provider_id",
          "auth.saml_relay_states": "sso_provider_id",
          "auth.sso_domains": "sso_provider_id"
        }
      },
      "auth.users": {
        "db": {
          "schema": "auth",
          "comment": "Auth: Stores user login data within a secure schema."
        },
        "refs": {
          "auth.identities": "user_id",
          "auth.sessions": "user_id",
          "auth.mfa_factors": "user_id",
          "auth.one_time_tokens": "user_id"
        }
      },
      "pgsodium.key": {
        "db": {
          "schema": "pgsodium",
          "comment": "This table holds metadata for derived keys given a key_id and key_context. The raw key is never stored."
        }
      },
      "vault.secrets": {
        "db": {
          "schema": "vault",
          "comment": "Table with encrypted `secret` column for storing sensitive information on disk."
        }
      },
      "realtime.messages_2025_05_12": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.schema_migrations": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.messages_2025_05_14": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.messages_2025_05_13": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.messages_2025_05_15": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.messages": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.messages_2025_05_16": {
        "db": {
          "schema": "realtime"
        }
      },
      "realtime.subscription": {
        "db": {
          "schema": "realtime"
        }
      },
      "comentarios_postagens": {
        "db": {
          "schema": "public"
        }
      },
      "postagens": {
        "db": {
          "schema": "public"
        },
        "refs": {
          "comentarios_postagens": "ref_id_postagem",
          "midias_postagens": "ref_id_postagem"
        }
      },
      "midias_postagens": {
        "db": {
          "schema": "public"
        }
      },
      "fcm_tokens": {
        "db": {
          "schema": "public"
        }
      },
      "log_planos_contratados": {
        "db": {
          "schema": "public"
        }
      },
      "planos_disponiveis": {
        "db": {
          "schema": "public"
        },
        "refs": {
          "log_planos_contratados": "ref_id_plano_anterior",
          "planos_contratados": "ref_id_plano"
        }
      },
      "planos_contratados": {
        "db": {
          "schema": "public"
        },
        "refs": {
          "log_planos_contratados": "ref_id_plano_contratado"
        }
      },
      "empresas": {
        "db": {
          "schema": "public"
        },
        "refs": {
          "comentarios_postagens": "ref_id_empresa",
          "postagens": "ref_id_empresa",
          "planos_contratados": "ref_id_empresa",
          "usuarios": "ref_id_empresa_ativa",
          "usuarios_empresas": "ref_id_empresa"
        }
      },
      "usuarios": {
        "db": {
          "schema": "public"
        },
        "refs": {
          "comentarios_postagens": "ref_id_usuario",
          "fcm_tokens": "ref_id_usuario",
          "planos_contratados": "ref_id_usuario_admin"
        },
        "sub": {
          "usuarios_empresas": "ref_id_usuario"
        }
      },
      "usuarios_empresas": {
        "db": {
          "schema": "public"
        },
        "parent": "usuarios"
      }
    },
    "views": {
      "vault.decrypted_secrets": {
        "db": {
          "schema": "vault"
        }
      },
      "pgsodium.valid_key": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.mask_columns": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.decrypted_key": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "pgsodium.masking_rule": {
        "db": {
          "schema": "pgsodium"
        }
      },
      "extensions.pg_stat_statements_info": {
        "db": {
          "schema": "extensions"
        }
      },
      "extensions.pg_stat_statements": {
        "db": {
          "schema": "extensions"
        }
      }
    }
  }
}
